{"version":3,"sources":["../../../../assets/Script/assets/Script/common.js"],"names":["gameState","cc","Enum","none","start","stop","common","Class","extends","Component","properties","statics","onLoad","D","commonInfo","batchInitObjPool","thisO","objArray","i","length","objinfo","initObjPool","objInfo","name","poolName","NodePool","initPollCount","ii","nodeO","instantiate","prefab","put","genNewNode","pool","nodeParent","newNode","size","get","addChild","backObjPool","nodeinfo","timeFmt","time","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","k"],"mappings":"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","file":"common.js","sourceRoot":"../../../../assets/Script","sourcesContent":["var gameState = cc.Enum({\n    none: 0,\n    start: 1,\n    stop: 2,\n});\n\nvar common = cc.Class({\n    extends: cc.Component,\n    properties: {\n    },\n    statics: {\n        gameState\n    },\n    onLoad: function () {\n        D.commonInfo = common;\n        D.common = this;\n    },\n    //批量初始化对象池 \n    batchInitObjPool: function(thisO, objArray){\n        for(var i=0; i< objArray.length; i++) {\n            var objinfo = objArray[i];\n            this.initObjPool(thisO, objinfo);\n        }\n    },\n    //初始化对象池\n    initObjPool: function(thisO,objInfo){\n        \n            var name = objInfo.name;\n            var poolName = name+'Pool';\n            thisO[poolName] = new cc.NodePool();\n            \n            let initPollCount = objInfo.initPollCount;\n\n            for (let ii = 0; ii < initPollCount; ++ii) {\n                let nodeO = cc.instantiate(objInfo.prefab); // 创建节点\n                thisO[poolName].put(nodeO); // 通过 putInPool 接口放入对象池\n            }\n    },\n    \n    //生成节点\n    genNewNode: function(pool,prefab,nodeParent){\n\n        let newNode = null;\n        if (pool.size() > 0) { // 通过 size 接口判断对象池中是否有空闲的对象\n            newNode = pool.get();\n        } else { // 如果没有空闲对象，也就是对象池中备用对象不够时，我们就用 cc.instantiate 重新创建\n            newNode = cc.instantiate(prefab);\n        }\n        nodeParent.addChild(newNode);\n        return newNode;\n    },\n    //放回对象池\n    backObjPool: function(thisO,nodeinfo){\n        var poolName = nodeinfo.name + 'Pool';\n        thisO[poolName].put(nodeinfo); \n    },\n    //时间格式化\n    timeFmt: function (time,fmt) { //author: meizz \n        var o = {\n            \"M+\": time.getMonth() + 1, //月份 \n            \"d+\": time.getDate(), //日 \n            \"h+\": time.getHours(), //小时 \n            \"m+\": time.getMinutes(), //分 \n            \"s+\": time.getSeconds(), //秒 \n            \"q+\": Math.floor((time.getMonth() + 3) / 3), //季度 \n            \"S\": time.getMilliseconds() //毫秒 \n        };\n        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (time.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n        for (var k in o)\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n        return fmt;\n    },\n    \n});\nvar gameState = cc.Enum({\n    none: 0,\n    start: 1,\n    stop: 2,\n});\n\n"]}