{"version":3,"sources":["controlBg.js"],"names":["cc","Class","extends","Component","properties","dot","default","type","Node","displayName","_joyCom","_playerNode","angle","radian","speed","onLoad","node","parent","getComponent","sprite","initTouchEvent","on","EventType","TOUCH_START","touchStartEvent","TOUCH_MOVE","touchMoveEvent","TOUCH_END","touchEndEvent","TOUCH_CANCEL","update","dt","allDirectionsMove","minX","maxX","minY","maxY","x","y","Math","cos","PI","sin","getDistance","pos1","pos2","sqrt","pow","getRadian","point","getAngle","pos","getPosition","atan2","setSpeed","distance","event","touchPos","convertToNodeSpaceAR","getLocation","p","radius","width","_stickPos","posX","posY","setPosition","pauseAction","enabled","eState","D","commonInfo","gameState","pause","resumeAction","start"],"mappings":"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","file":"controlBg.js","sourceRoot":"../../../../assets/Script","sourcesContent":["cc.Class({  \r\n    extends: cc.Component,  \r\n    properties: {  \r\n        dot: {  \r\n            default: null,  \r\n            type: cc.Node,  \r\n            displayName: '摇杆节点',  \r\n        },  \r\n        _joyCom: {  \r\n            default: null,  \r\n            displayName: 'joy Node',  \r\n        },  \r\n        _playerNode: {  \r\n            default: null,  \r\n            displayName: '被操作的目标Node',  \r\n        },  \r\n        angle: {  \r\n            default: null,  \r\n            displayName: '当前触摸的角度',  \r\n        },  \r\n        radian: {  \r\n            default: null,  \r\n            displayName: '弧度',  \r\n        },  \r\n        speed: 0, //实际速度  \r\n    },  \r\n  \r\n  \r\n    onLoad: function () {  \r\n        this._joyCom = this.node.parent.getComponent('control');  \r\n        this._playerNode = this._joyCom.sprite;  \r\n        this.initTouchEvent();  \r\n    },  \r\n  \r\n\r\n    initTouchEvent: function () {  \r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.touchStartEvent, this);  \r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoveEvent, this);  \r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.touchEndEvent, this);  \r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEndEvent, this);  \r\n    },  \r\n  \r\n    update: function (dt) {  \r\n        this.allDirectionsMove();  \r\n    },  \r\n  \r\n    allDirectionsMove: function () {  \r\n        var minX = -320\r\n        var maxX = 320;\r\n        var minY = -530;\r\n        var maxY = 530;\r\n        if(this._playerNode.x < minX ){\r\n            this._playerNode.x = minX;\r\n        }\r\n        else if(this._playerNode.x > maxX){\r\n            this._playerNode.x = maxX;\r\n        }\r\n        else if(this._playerNode.y < minY){\r\n            this._playerNode.y = minY;\r\n        }\r\n        else if(this._playerNode.y > maxY){\r\n            this._playerNode.y = maxY;\r\n        }\r\n        else{\r\n            this._playerNode.x += Math.cos(this.angle * (Math.PI / 180)) * this.speed ;  \r\n            this._playerNode.y += Math.sin(this.angle * (Math.PI / 180)) * this.speed ;\r\n        }  \r\n        \r\n    },  \r\n    getDistance: function (pos1, pos2) {  \r\n        return Math.sqrt(Math.pow(pos1.x - pos2.x, 2) +  \r\n            Math.pow(pos1.y - pos2.y, 2));  \r\n    },  \r\n    /*角度/弧度转换 \r\n    角度 = 弧度 * 180 / Math.PI \r\n    弧度 = 角度 * Math.PI / 180*/  \r\n    //计算弧度并返回  \r\n    getRadian: function (point) {  \r\n        this.radian = Math.PI / 180 * this.getAngle(point);  \r\n        return this.radian;  \r\n    },  \r\n    getAngle: function (point) {  \r\n        var pos = this.node.getPosition();  \r\n        this.angle = Math.atan2(point.y - pos.y, point.x - pos.x) * (180 / Math.PI);  \r\n        return this.angle;  \r\n    },  \r\n    setSpeed: function (point) {  \r\n        var distance = this.getDistance(point, this.node.getPosition());  \r\n        if (distance < 50) {  \r\n            this.speed = 5;  \r\n        } else {  \r\n            this.speed = 10;  \r\n        }  \r\n    },  \r\n    touchStartEvent: function (event) {  \r\n        // 获取触摸位置的世界坐标转换成圆圈的相对坐标（以圆圈的锚点为基准）  \r\n        var touchPos = this.node.convertToNodeSpaceAR(event.getLocation());  \r\n        //触摸点与圆圈中心的距离  \r\n        var distance = this.getDistance(touchPos, cc.p(0, 0));  \r\n        //圆圈半径  \r\n        var radius = this.node.width / 2;  \r\n        // 记录摇杆位置，给touch move使用  \r\n        this._stickPos = touchPos;  \r\n        var posX = this.node.getPosition().x + touchPos.x;  \r\n        var posY = this.node.getPosition().y + touchPos.y;  \r\n        //手指在圆圈内触摸,控杆跟随触摸点  \r\n        if (radius > distance) {  \r\n            this.dot.setPosition(cc.p(posX, posY));  \r\n            return true;  \r\n        }  \r\n        return false;  \r\n    },  \r\n  \r\n    touchMoveEvent: function (event) {  \r\n        var touchPos = this.node.convertToNodeSpaceAR(event.getLocation());  \r\n        var distance = this.getDistance(touchPos, cc.p(0, 0));  \r\n        var radius = this.node.width / 2;  \r\n        var posX = this.node.getPosition().x + touchPos.x;  \r\n        var posY = this.node.getPosition().y + touchPos.y;  \r\n        if (radius > distance) {  \r\n            this.dot.setPosition(cc.p(posX, posY));  \r\n        } else {  \r\n            var x = this.node.getPosition().x + Math.cos(this.getRadian(cc.p(posX, posY))) * radius;  \r\n            var y = this.node.getPosition().y + Math.sin(this.getRadian(cc.p(posX, posY))) * radius;  \r\n            this.dot.setPosition(cc.p(x, y));  \r\n        }  \r\n        this.getAngle(cc.p(posX, posY));  \r\n        this.setSpeed(cc.p(posX, posY));  \r\n    },  \r\n    touchEndEvent: function () {  \r\n        this.dot.setPosition(this.node.getPosition());  \r\n        this.speed = 0;  \r\n    },\r\n    pauseAction: function(){\r\n        this.enabled = false;\r\n        this.eState = D.commonInfo.gameState.pause;\r\n    },\r\n    resumeAction: function(){\r\n        this.enabled = true;\r\n        this.eState = D.commonInfo.gameState.start;\r\n    },  \r\n});  "]}